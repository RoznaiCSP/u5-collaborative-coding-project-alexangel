// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level2":return tiles.createTilemap(hex`1e001e`, img`
2222222222222222222222222222.2
2...............2..222222222.2
2........222222.2..........2.2
2.2222222222222.2.2222222222.2
2.2.222222222.2.2............2
2.2.2......2..2.2............2
2.2.2......2..2.2............2
2.2.2.22...2..2.2.222...222..2
2.2.2.222222..2.2.2.2...2.22.2
2...2...........2.2.2...2.2..2
2...2..2222222..2.2.2...2.2..2
2.22222222...2..2.2.2...2.2..2
2.222222222..2..2.2.2...2.2..2
2.........2.....2.2.2...2.2..2
22222222222..2222.2.......2..2
22...........2....22.....22..2
222222222..2.2.....2222222...2
2.2.2.2.2..2.2....2......2.2.2
22......2..2.2....2.2.2..2.2.2
2.2.2.2.2.22.2....222.2..2.2.2
2222222.2.2..2......2.2.2..2.2
2.......2.2..2........222..2.2
2.2.22..2.22.2......222...22.2
2.2.22..2..2.2..22222....22..2
2.2222222222.2222.......22...2
2.2...................222....2
2.2.....222....22222222......2
2.2222222222.22..............2
2............22222...........2
222222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.floorLight5,sprites.dungeon.floorLight1,myTiles.tile1,sprites.dungeon.floorDark0], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
